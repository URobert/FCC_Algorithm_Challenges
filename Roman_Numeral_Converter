//V2.0
function convert(num) {
  
  var arrN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
              20, 30, 40, 50, 60, 70, 80, 90, 100,
              200, 300, 400, 500, 600, 700, 800, 900, 1000];
  
  var arrRoman = ["I","II","III","IV","V","VI","VII","VIII","IX","X",
                  "XX","XXX","XL","L","LX","LXX","LXXX","XC","C",
                  "CC","CCC","CD","D","DC","DCC","DCCC","CM","M"];
                  
  var convertedNumber = "";
  var lastElemIndex = arrRoman.length-1; //index

  	while(lastElemIndex >= 0){
    	if (num - arrN[lastElemIndex] >= 0){
    	   convertedNumber += arrRoman[lastElemIndex];
           num = num - arrN[lastElemIndex];
        }else{
		  lastElemIndex--;
        }
	}
    return convertedNumber;  
 }

convert(2014);



/*V1.0 The way of the noob
function convert(num) {
  
  var arrN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
              20, 30, 40, 50, 60, 70, 80, 90, 100,
              200, 300, 400, 500, 600, 700, 800, 900, 1000];
  
  var arrRoman = ["I","II","III","IV","V","VI","VII","VIII","IX","X",
                  "XX","XXX","XL","L","LX","LXX","LXXX","XC","C",
                  "CC","CCC","CD","D","DC","DCC","DCCC","CM","M"];
  var combos = 0;
   
  if (arrN.indexOf(num) > 0){ // if a number uses only one element from the alphabet
    var w = arrN.indexOf(num);
    num = arrRoman[w];
  }
for (var i = 0 ; i < arrN.length; i++){  //scenario with a combination of 2 elements
    for (var j = 0; j < arrN.length; j++){
      combos++;
      if (num === arrN[i] + arrN[j]){ 
        num = arrRoman[j] + arrRoman[i]; 
        }
      }
  }

if (combos === 784){ //start this search only if number can't be obtained by a combo of 2 elem
  for (var a = 0 ; a < arrN.length; a++){ // scenario with a combination of 3 elements
    for (var b = 0; b < arrN.length; b++){
          for (var c = 0; c < arrN.length; c++){ 
              if (num === arrN[a] + arrN[b] + arrN[c]){
                num = arrRoman[c] + arrRoman[b] + arrRoman[a];
              }
            }
          }
        }
}    
 return num;
}

//convert(649);*/


